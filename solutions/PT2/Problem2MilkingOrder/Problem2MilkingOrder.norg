* Observations:
** the problem asks you to consider a prefix of FJ's observations (there will never be a situation where theres a gap between observations applied)
*** This means that we can do online processing of the input and apply the restrictions one by one   
** The restrictions can be represented as edges in a directed graph where the edge direction determines the ordering
*** The restrictions are impossible to apply if there exists a cycle. In other words, if an edge that is added creates a cycle, it is impossible to satisfy that restriction as well as the restrictions that came before
**** keep in mind this relates to topological sorting (may come up later)
*** Leaves in this graph can be placed in whatever order 

* You can think of the process as removing the minimum leaf from the directed graph at a time one by one by one

* Final Algorithm:
** use a map to keep track of each node's indegree and do the build process
  ~ keep adding edges to the graph until the graph contains a cycle.
  ~ if there exists a cycle, backtrack all of the edges created based on this observation and make sure to also reverse anything you've done to the map based on this one obseration

** the final graph has been constructed but this format isn't very useful to us:
   ~ Insert all the nodes that have an indegree of 0 or 1 to a set
   ~ the one with the minimum cow ID needs to be removed first and appended to the answer
   ~~ Remember to continue updating the indegree of the cow
   ~~ After every removal, also check if the current cow has a parent / parents and whether its/their indegree will become 0 after the removal of the current node. If so, then it needs to be inserted in the set because it is allowed to be processed now


* find out how to make the lexiographically smallest toplogical sorting
